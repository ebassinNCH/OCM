install.packages("feather")
library(feather)
df = read_feather('c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.feather')
View(df)
View(df)
save(df, 'c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi')
save(df, file='c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi')
save(df, file='c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.rds')
save(df, file='c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.rdata')
dfepi = df
save(dfepi, file='c:/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.rdata')
install.packages('ggplot2')
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram()
library('ggplot2')
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram()
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram()
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366')
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7)
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, breaks=10)
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10)
p + theme_classic()
p <- ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10)
p + theme_classic()
p
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10) + theme_classic()
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10) + theme_classic(panel.border = element_blank())
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10) + theme_classic() + theme(panel.border = element_blank()))
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10) + theme_classic() + theme(panel.border = element_blank())
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(col='#003366', fill='#003366', alpha=0.7, bins=10) + theme(panel.background = element_rect(fill='white',))
ggplot(data=df, aes(df$BaselinePrice)) + geom_histogram(fill='#003366', alpha=0.7, bins=10) + theme(panel.background = element_rect(fill='white',))
ggplot(data=dataset, aes(dataset$ActualCost)) + geom_histogram(fill='#003366', alpha=0.7, bins=10) + theme(panel.background = element_rect(fill='white', alpha=0.1))
head(dataset)
df = read.csv('C:/Users/ebassin/AppData/Local/Radio/REditorWrapper_91d11ab1-98f0-4e95-b5a5-047376c4cff0/input_df_a4412a6c-3a46-404f-8c2c-39e08ab17ead.csv', check.names = FALSE, encoding = "UTF-8", blank.lines.skip = FALSE);
head(df)
ggplot(data=df, aes(df$ActualCost)) + geom_histogram(fill='#003366', alpha=0.7, bins=10) + theme(panel.background = element_rect(fill='white', alpha=0.1))
ggplot(data=df, aes(df$ActualCost)) + geom_histogram(fill='#003366', alpha=0.7, bins=10) + theme(panel.background = element_rect(fill='white')
`dataset` = read.csv('C:/Users/ebassin/AppData/Local/Radio/REditorWrapper_91d11ab1-98f0-4e95-b5a5-047376c4cff0/input_df_a4412a6c-3a46-404f-8c2c-39e08ab17ead.csv', check.names = FALSE, encoding = "UTF-8", blank.lines.skip = FALSE);
install.packages("plotly")
`dataset` = read.csv('C:/Users/ebassin/AppData/Local/Radio/REditorWrapper_aeab614d-3b21-45da-91e0-48edf276b199/input_df_d1b8735c-c6ed-4781-956e-b2ade66fba92.csv', check.names = FALSE, encoding = "UTF-8", blank.lines.skip = FALSE);
library("plotly")
plot_ly(dataset, x=~TotalPaid, type="histogram")
plot_ly(dataset, x=~TotalPaid, type="histogram")
plot_ly(dataset, x=~TotalPaid, type="histogram", nbinsx=10)
`dataset` = read.csv('C:/Users/ebassin/AppData/Local/Radio/REditorWrapper_d2a38982-f33b-4fd3-a5ee-8846cef0af2c/input_df_57f536b8-3820-483d-8e28-ea08da5988df.csv', check.names = FALSE, encoding = "UTF-8", blank.lines.skip = FALSE);
# Original Script. Please update your script content here and once completed copy below section back to the original editing window #
library("plotly")
plot_ly(dataset, x=~TotalPaid, type="histogram")
plot_ly(dataset, x=~TotalPaid, type="histogram", nbinsx=30)
plot_ly(dataset, x=~TotalPaid, type="histogram", nbinsx=50)
shiny::runApp('C:/temp/Sample')
runApp('C:/temp')
runApp('C:/temp')
install.packages('tidyverse')
runApp('C:/temp')
runApp('C:/temp')
runApp('C:/temp', display.mode='showcase')
runExample("02_text")       # tables and data frames
runExample("06_tabsets")    # tabbed panels
runExample("08_html")       # Shiny app built from HTML
library(shiny)
library(tidyverse)
library(feather)
dfepi = read_feather('AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.feather')
dfepi = read_feather('/AdvAnalytics/OCM/CCSI/BaselineUpdated/Working/dfepi.feather')
warnings()
runApp('C:/Code/OCM/Shiny/Testing/App.R')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/Testing/FirstExample')
runApp('C:/Code/OCM/Shiny/RiskShare/Demo')
runApp('C:/Code/OCM/Shiny/RiskShare/Demo')
